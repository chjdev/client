"""
    Fanlens API

     Fanlens API to handle \"activities\". Predictions are performed automatically and can be managed here ## Concepts The API consists of 4 main concepts: sources, activities and tags (bundled in tagsets) and models used for predictions. * An activity is a text based action performed by a user, e.g. a Facebook Comment or a Tweet. * A source is the originator of these activities and is used for importing. Currently Facebook, Twitter, and Generic Sources are supported. * A tag is a piece of meta information that is used to build specialized speech models, e.g. \"positive\", or \"negative\". They are bundled in tagsets for convenience, e.g. \"Emotion\".

    OpenAPI spec version: 4.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""



import os
import sys
import unittest

import client
from client.rest import ApiException
from client.apis.tagsets_api import TagsetsApi


class TestTagsetsApi(unittest.TestCase):
    """ TagsetsApi unit test stubs """

    def setUp(self):
        self.api = client.apis.tagsets_api.TagsetsApi()

    def tearDown(self):
        pass

    def test_tagsets_get(self):
        """
        Test case for tagsets_get

        Get tagsets of current user
        """
        pass

    def test_tagsets_post(self):
        """
        Test case for tagsets_post

        Create new tagset
        """
        pass

    def test_tagsets_tagset_id_delete(self):
        """
        Test case for tagsets_tagset_id_delete

        Remove the tagset
        """
        pass

    def test_tagsets_tagset_id_get(self):
        """
        Test case for tagsets_tagset_id_get

        Get tagset
        """
        pass

    def test_tagsets_tagset_id_patch(self):
        """
        Test case for tagsets_tagset_id_patch

        Update the tagset
        """
        pass

    def test_tagsets_tagset_id_tag_delete(self):
        """
        Test case for tagsets_tagset_id_tag_delete

        Remove tag from tagset
        """
        pass

    def test_tagsets_tagset_id_tag_put(self):
        """
        Test case for tagsets_tagset_id_tag_put

        Add tag to the tagset
        """
        pass


if __name__ == '__main__':
    unittest.main()
