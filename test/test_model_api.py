"""
    Fanlens API

     Fanlens API to handle \"activities\". Predictions are performed automatically and can be managed here ## Concepts The API consists of 4 main concepts: sources, activities and tags (bundled in tagsets) and models used for predictions. * An activity is a text based action performed by a user, e.g. a Facebook Comment or a Tweet. * A source is the originator of these activities and is used for importing. Currently Facebook, Twitter, and Generic Sources are supported. * A tag is a piece of meta information that is used to build specialized speech models, e.g. \"positive\", or \"negative\". They are bundled in tagsets for convenience, e.g. \"Emotion\".

    OpenAPI spec version: 4.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""



import os
import sys
import unittest

import client
from client.rest import ApiException
from client.apis.model_api import ModelApi


class TestModelApi(unittest.TestCase):
    """ ModelApi unit test stubs """

    def setUp(self):
        self.api = client.apis.model_api.ModelApi()

    def tearDown(self):
        pass

    def test_model_get(self):
        """
        Test case for model_get

        Get all models of user
        """
        pass

    def test_model_model_id_get(self):
        """
        Test case for model_model_id_get

        Get meta information about a trained model
        """
        pass

    def test_model_prediction_post(self):
        """
        Test case for model_prediction_post

        Get prediction for a provided text based on the best model for source/tagset
        """
        pass

    def test_model_search_post(self):
        """
        Test case for model_search_post

        Get meta information about a trained model
        """
        pass

    def test_model_train_post(self):
        """
        Test case for model_train_post

        Train a new model for a tagset
        """
        pass


if __name__ == '__main__':
    unittest.main()
