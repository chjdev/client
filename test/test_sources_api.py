"""
    Fanlens API

     Fanlens API to handle \"activities\". Predictions are performed automatically and can be managed here ## Concepts The API consists of 4 main concepts: sources, activities and tags (bundled in tagsets) and models used for predictions. * An activity is a text based action performed by a user, e.g. a Facebook Comment or a Tweet. * A source is the originator of these activities and is used for importing. Currently Facebook, Twitter, and Generic Sources are supported. * A tag is a piece of meta information that is used to build specialized speech models, e.g. \"positive\", or \"negative\". They are bundled in tagsets for convenience, e.g. \"Emotion\".

    OpenAPI spec version: 4.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import unittest
from typing import Type

from client.apis.sources_api import SourcesApi
from test import ApiTestCase


class TestSourcesApi(ApiTestCase[SourcesApi]):
    """ SourcesApi unit test stubs """

    @property
    def api_class(self) -> Type[SourcesApi]:
        return SourcesApi

    def test_sources_get(self) -> None:
        """
        Test case for sources_get

        Get sources of current user
        """
        self.fail()

    def test_sources_post(self) -> None:
        """
        Test case for sources_post

        Create a new Source
        """
        self.fail()

    def test_sources_source_id_delete(self) -> None:
        """
        Test case for sources_source_id_delete

        Remove the source, **WARNING!** This will remove all data associated with the source!
        """
        self.fail()

    def test_sources_source_id_get(self) -> None:
        """
        Test case for sources_source_id_get

        Get source
        """
        self.fail()

    def test_sources_source_id_patch(self) -> None:
        """
        Test case for sources_source_id_patch

        Update the source.
        """
        self.fail()


if __name__ == '__main__':
    unittest.main()
